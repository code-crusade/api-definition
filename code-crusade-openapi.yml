openapi: 3.0.1
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
paths:
  /exercises:
    get:
      summary: Gets the full list of exercises
      operationId: exercisesIndex
      responses:
        '200':
          description: OK


  /exercises/{exerciseId}:
    get:
      summary: Gets the specified exercise
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200' :
          description: OK
        '401' :
          description: User must be logged in to see this exercise
        '403' :
          description: User is not allowed to see this exercise
        '404' :
          description: Exercise does not exist


  /exercises/{exerciseId}/submissions:
    get:
      summary: Gets the list of submissions for the specified exercise
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200' :
          description: OK
        '401' :
          description: User must be logged in to see the submissions.
        '403' :
          description: User is not allowed to see the submissions.
        '404' :
          description: Exercise does not exist

    post:
      summary: Submits the code as the current user's solution for the exercise
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunnerArguments'
      responses:
        '201' :
          description: Submission has been created
        '400' :
          description: Submitted solution does not fit the exercise parameters
        '401' :
          description: User must be logged in to submit solutions to the exercise
        '403' :
          description: User is not allowed to post solutions for this exercise
        '404' :
          description: Exercise does not exist


  /exercises/{exerciseId}/test:
    post:
      summary: Validate the code against the exercise's test suite
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunnerArguments'
      responses:
        '200' :
          description: The test suite has been executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeValidaationReport'
        '400' :
          description: Submitted solution does not fit the exercise parameters
        '401' :
          description: User must be logged in to see this exercise
        '403' :
          description: User is not allowed to see this exercise
        '404' :
          description: Exercise does not exist


  /exercises/{exerciseId}/submissions/{submissionId}:
    get:
      summary: Gets the list of submissions for the specified exercise
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      - name: submissionId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200' :
          description: OK
        '401' :
          description: User must be logged in to see this submission
        '403' :
          description: User is not allowed to see this submission
        '404' :
          description: Submission does not exist

  /exercises/{exerciseId}/submissions/{submissionId}/results:
    get:
      summary: Gets the results of the exercise validation for this submission
      parameters: 
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
      - name: submissionId
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200' :
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeValidaationReport'
        '401' :
          description: User must be logged in to see the results
        '403' :
          description: User is not allowed to see the results
        '404' :
          description: Submission does not exist


  '/runner/{exerciseId}':
    post:
      deprecated: true
      summary: Runs provided code
      operationId: runCodeForExercise
      parameters:
      - name: exerciseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunnerArguments'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/RFC7807Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found


servers:
- url: '//localhost:8080/'
components:
  schemas:
    RunnerArguments:
      type: object
      properties:
        code:
          description: code
          type: string
        language:
          description: language
          type: string
      example:
        language: 'js'
        code: 'function main() { console.log("Hello World"); }'


    CodeValidaationReport:
      type: object
      properties:
        todo:
          type: string


    RFC7807Body:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        detail:
          type: string
        status:
          type: integer
          format: int64
        instance:
          type: string
          format: uri
      xml:
        name: problem
  responses:
    RFC7807Error:
      description: Api problem response
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/RFC7807Body'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/RFC7807Body'
